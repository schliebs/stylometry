{
    "collab_server" : "",
    "contents" : "## 2017 Data Analysis Project Thales\n# F.Carmillet\n\nlibrary(plyr)\nlibrary(dplyr) \nlibrary(tidyr)\n\n# Loading XLSX-Files\nlibrary(rJava)\nlibrary(xlsx)\nlibrary(stringr)\n\nrm(list=ls())\n\n# setting of working directory\n\nif (Sys.info()['user'] == 'Schliebs')      setwd(\"C:/Users/Schliebs/Dropbox/17_thales/\") else\n  if (Sys.info()['user'] == '....')       setwd('/.....')\n\n\n## INTERMEDIARY WORK : \n\n# data <- read.xlsx2(file = 'data/raw_excel/V5-2K17-0901-Assess-quest -deponto_V2.xlsx',\n#                   sheetIndex = 1,\n# encoding = 'UTF-8',\n# startRow = 7,\n# as.data.frame = TRUE)\n# names(data)\n\ndf <- data.frame()\n\nfor (q in dir(\"data/raw_excel\")) {\n  \n  \n\n# Loading of Data\n  \neval(parse(text = paste(\"data <- read.xlsx2(file = 'data/raw_excel/\",q,\"',\n                  sheetIndex = 1,\n                  encoding = 'UTF-8',\n                  startRow = 7,\n                  as.data.frame = TRUE)\",sep = \"\")\n           )\n     )\n\n#data %>% View()\n\n#names(data)\n\n# Data management\n\ndata$rID <- data [,c(\"X.\")]  %>% as.character()\ndata$rID <- data$rID %>%  str_replace_all(\"\\n\",\"\")\n\n# Data Coding\n\nnames(data)\n\n\n # Defining conversion function\nmarcel_conv <- function(x,\n                        row = \"0.1\",\n                        column = \"Donnée\"){ return(x %>%\n                                           filter(rID %in% c(row)) %>%\n                                           .[,c(column)] %>%\n                                             as.vector() %>%\n                                             as.character())}\n\n# 0 (\"Donnée.1..vrai\" is standard column)\nnom <- data %>% marcel_conv(row = \"0.1\", column = \"Verbatim\")\nprint(nom)\ndate <- data %>% marcel_conv(row = \"0.2\", column = \"Verbatim\")\nanonyme <- data %>% marcel_conv(row = \"0.3\")\n\n# 1\nsociete <- data %>% marcel_conv(row = \"1.1\", column = \"Société\")\nsociete_v <- data %>% marcel_conv(row = \"1.1\", column = \"Verbatim\")\n\ngbu <- data %>% marcel_conv(row = \"1.2\", column = \"GBU\")\ngbu_v <- data %>% marcel_conv(row = \"1.2\", column = \"Verbatim\")\n\nsite_v <-  data %>% marcel_conv(row = \"1.3\", column = \"Verbatim\")\n\nfonction_v <-  data %>% marcel_conv(row = \"1.4\", column = \"Verbatim\")\n\nlangue_m <-  data %>% marcel_conv(row = \"1.5\", column = \"Langue\")\nlangue_m_v <-  data %>% marcel_conv(row = \"1.5\", column = \"Verbatim\")\n\nm_projet <-  data %>% marcel_conv(row = \"1.6\")\n\n# Share-project \n\nif ((data %>% marcel_conv(row = \"1.7\")) %in% c(\"1\")) share_projet <-  \"<25%\" else\n  if ((data %>% marcel_conv(row = \"1.8\")) %in% c(\"1\")) share_projet <-  \"<50%\" else\n    if ((data %>% marcel_conv(row = \"1.9\")) %in% c(\"1\")) share_projet <-  \"<75%\" else\n      if ((data %>% marcel_conv(row = \"1.10\")) %in% c(\"1\")) share_projet <-  \">75%\" else\n        share_projet <- NA\n\n\n\nactivite_princ <-  data %>% marcel_conv(row = \"2.1\", column = \"Projet..Activité.principal.e.\")\nactivite_sous <-  data %>% marcel_conv(row = \"2.1\", column = \"Sous.projet\")\nactivite_v <-  data %>% marcel_conv(row = \"2.1\", column = \"Verbatim\")\n\n\nprojet_intern <-  data %>% marcel_conv(row = \"2.2\")\n\nnation_domin <-  data %>% marcel_conv(row = \"2.3\", column = \"Nationalité\")\nnation_domin_v <-  data %>% marcel_conv(row = \"2.3\", column = \"Verbatim\")\n\nnation_cli <-  data %>% marcel_conv(row = \"2.4\", column = \"Nationalité\")\nnation_cli_v <-  data %>% marcel_conv(row = \"2.4\", column = \"Verbatim\")\n\n\ndebut <-  data %>% marcel_conv(row = \"2.5\", column = \"Date.début\")\nfin <-  data %>% marcel_conv(row = \"2.5\", column = \"Date.fin\")\nduree_v <-  data %>% marcel_conv(row = \"2.5\", column = \"Verbatim\")\n\nentree <-  data %>% marcel_conv(row = \"2.6\", column = \"Date.début\")\nsortie <-  data %>% marcel_conv(row = \"2.6\", column = \"Date.fin\")\n\nsortie[is.na(sortie) | sortie == \"\"] <- fin[is.na(sortie)| sortie == \"\"]\n\nrole_v <-  data %>% marcel_conv(row = \"2.7\", column = \"Verbatim\")\n\nlangue <- data %>% marcel_conv(row = \"3.1\", column = \"Langue\")\nlangue_v <- data %>% marcel_conv(row = \"3.1\", column = \"Verbatim\")\n\nmotif_v <- data %>% marcel_conv(row = \"3.2\", column = \"Verbatim\")\n\nintervenu <- data %>% marcel_conv(row = \"3.3\", column = \"Date.début\")\nintervenu_v <- data %>% marcel_conv(row = \"3.3\", column = \"Verbatim\")\n\ndemande <- data %>% marcel_conv(row = \"3.4\", column = \"Date.début\")\ndemande_v <- data %>% marcel_conv(row = \"3.4\", column = \"Verbatim\")\n\ntest <- data %>% marcel_conv(row = \"3.5\")\n\necrit <- data %>% marcel_conv(row = \"3.6\")\necrit_v <- data %>% marcel_conv(row = \"3.6\", column = \"Verbatim\")\n\noral <- data %>% marcel_conv(row = \"3.7\")\noral_v <- data %>% marcel_conv(row = \"3.7\", column = \"Verbatim\")\n\nouvert <- data %>% marcel_conv(row = \"3.8\")\nouvert_v <- data %>% marcel_conv(row = \"3.8\", column = \"Verbatim\")\n\nferme <- data %>% marcel_conv(row = \"3.9\")\nferme_v <- data %>% marcel_conv(row = \"3.9\", column = \"Verbatim\")\n\nniveau <- data %>% marcel_conv(row = \"3.10\")\nniveau_v <- data %>% marcel_conv(row = \"3.10\", column = \"Verbatim\")\n\norganisme_v <- data %>% marcel_conv(row = \"3.11\", column = \"Verbatim\")\n\nchoisi <- data %>% marcel_conv(row = \"3.12\")\n\nindivid <- data %>% marcel_conv(row = \"4.1\")\n\ncollec <- data %>% marcel_conv(row = \"4.2\")\n\nenfr <- data %>% marcel_conv(row = \"4.3\")\n\netrang <- data %>% marcel_conv(row = \"4.4\")\n\ntelephone <- data %>% marcel_conv(row = \"4.5\")\n\nelearning <- data %>% marcel_conv(row = \"4.6\")\n\npresidentiel <- data %>% marcel_conv(row = \"4.7\")\n\nduree_formation <- data %>% marcel_conv(row = \"4.8\")\n\nindivid_v <- data %>% marcel_conv(row = \"4.1\", column = \"Verbatim\")\n\ncollec_v <- data %>% marcel_conv(row = \"4.2\", column = \"Verbatim\")\n\nenfr_v <- data %>% marcel_conv(row = \"4.3\", column = \"Verbatim\")\n\netrang_v <- data %>% marcel_conv(row = \"4.4\", column = \"Verbatim\")\n\ntelephone_v <- data %>% marcel_conv(row = \"4.5\", column = \"Verbatim\")\n\nelearning_v <- data %>% marcel_conv(row = \"4.6\", column = \"Verbatim\")\n\npresidentiel_v <- data %>% marcel_conv(row = \"4.7\", column = \"Verbatim\")\n\nduree_formation_v <- data %>% marcel_conv(row = \"4.8\", column = \"Verbatim\")\n\ncours_v <- data %>% marcel_conv(row = \"4.9\", column = \"Verbatim\")\n\nadaption <- data %>% marcel_conv(row = \"4.10\")\nadaption_v <- data %>% marcel_conv(row = \"4.10\", column = \"Verbatim\")\n\n\n\nif ((data %>% marcel_conv(row = \"4.9.1\")) %in% c(\"1\")) heures_semaine <-  \"30 min\" else\n  if ((data %>% marcel_conv(row = \"4.9.2\")) %in% c(\"1\")) heures_semaine <-  \"60 min\" else\n    if ((data %>% marcel_conv(row = \"4.9.3\")) %in% c(\"1\")) heures_semaine <-  \"> 60 min\" else\n      if ((data %>% marcel_conv(row = \"4.9.4\")) %in% c(\"1\")) heures_semaine <-  \"fulltime\" else\n        heures_semaine <- NA\n\n# Share-ecoute \n\nif ((data %>% marcel_conv(row = \"4.11\")) %in% c(\"1\")) ecoute <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"4.12\")) %in% c(\"1\")) ecoute <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"4.13\")) %in% c(\"1\")) ecoute <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"4.14\")) %in% c(\"1\")) ecoute <-  \"Tout a fait\" else\n        ecooute <- NA\n\nif ((data %>% marcel_conv(row = \"4.15\")) %in% c(\"1\")) lecture <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"4.16\")) %in% c(\"1\")) lecture <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"4.17\")) %in% c(\"1\")) lecture <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"4.18\")) %in% c(\"1\")) lecture <-  \"Tout a fait\" else\n        lecture <- NA\n\nif ((data %>% marcel_conv(row = \"4.19\")) %in% c(\"1\")) orale <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"4.20\")) %in% c(\"1\")) orale <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"4.21\")) %in% c(\"1\")) orale <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"4.22\")) %in% c(\"1\")) orale <-  \"Tout a fait\" else\n        orale <- NA\n\nif ((data %>% marcel_conv(row = \"4.23\")) %in% c(\"1\")) expression_or <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"4.24\")) %in% c(\"1\")) expression_or <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"4.25\")) %in% c(\"1\")) expression_or <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"4.26\")) %in% c(\"1\")) expression_or <-  \"Tout a fait\" else\n        expression_or <- NA\n\nif ((data %>% marcel_conv(row = \"4.27\")) %in% c(\"1\")) expression_ec <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"4.28\")) %in% c(\"1\")) expression_ec <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"4.29\")) %in% c(\"1\")) expression_ec <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"4.30\")) %in% c(\"1\")) expression_ec <-  \"Tout a fait\" else\n        expression_ec <- NA\n\nif ((data %>% marcel_conv(row = \"4.31\")) %in% c(\"1\")) attentes <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"4.32\")) %in% c(\"1\")) attentes <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"4.33\")) %in% c(\"1\")) attentes <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"4.34\")) %in% c(\"1\")) attentes <-  \"Tout a fait\" else\n        attentes <- NA\n\nattentes_v <- data %>% marcel_conv(row = \"4.35\", column = \"Verbatim\")\n\nniveau_fin <- data %>% marcel_conv(row = \"4.36\")\n\nniveau_fin_v <- data %>% marcel_conv(row = \"4.37\", column = \"Verbatim\")\n\ntest_v <- data %>% marcel_conv(row = \"4.38\", column = \"Verbatim\")\n\nlangue_impose <- data %>% marcel_conv(row = \"5.1\", column = \"Verbatim\")\nlangue_impose_l <- data %>% marcel_conv(row = \"5.2\", column = \"Langue\")\nlangue_impose_v<- data %>% marcel_conv(row = \"5.2\", column = \"Verbatim\")\nautre_langue_l<- data %>% marcel_conv(row = \"5.3\", column = \"Langue\")\nautre_langue_v<- data %>% marcel_conv(row = \"5.3\", column = \"Verbatim\")\n\n\nif ((data %>% marcel_conv(row = \"5.6\")) %in% c(\"1\")) appris_lecture <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"5.7\")) %in% c(\"1\")) appris_lecture <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"5.8\")) %in% c(\"1\")) appris_lecture <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"5.9\")) %in% c(\"1\")) appris_lecture <-  \"Tout a fait\" else\n        appris_lecture <- NA\n\nif ((data %>% marcel_conv(row = \"5.10\")) %in% c(\"1\")) appris_parole <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"5.11\")) %in% c(\"1\")) appris_parole <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"5.12\")) %in% c(\"1\")) appris_parole <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"5.13\")) %in% c(\"1\")) appris_parole <-  \"Tout a fait\" else\n        appris_parole <- NA\n\nif ((data %>% marcel_conv(row = \"5.14\")) %in% c(\"1\")) appris_orale <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"5.15\")) %in% c(\"1\")) appris_orale <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"5.16\")) %in% c(\"1\")) appris_orale <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"5.17\")) %in% c(\"1\")) appris_orale <-  \"Tout a fait\" else\n        appris_orale <- NA\n\nif ((data %>% marcel_conv(row = \"5.18\")) %in% c(\"1\")) appris_redaction <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"5.19\")) %in% c(\"1\")) appris_redaction <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"5.20\")) %in% c(\"1\")) appris_redaction <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"5.21\")) %in% c(\"1\")) appris_redaction <-  \"Tout a fait\" else\n        appris_redaction <- NA\n\nif ((data %>% marcel_conv(row = \"5.22\")) %in% c(\"1\")) appris_negotiation <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"5.23\")) %in% c(\"1\")) appris_negotiation <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"5.24\")) %in% c(\"1\")) appris_negotiation <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"5.25\")) %in% c(\"1\")) appris_negotiation <-  \"Tout a fait\" else\n        appris_negotiation <- NA\n\nif ((data %>% marcel_conv(row = \"5.26\")) %in% c(\"1\")) competences <-  \"Pas du tout\" else\n  if ((data %>% marcel_conv(row = \"5.27\")) %in% c(\"1\")) competences <-  \"Un peu\" else\n    if ((data %>% marcel_conv(row = \"5.28\")) %in% c(\"1\")) competences <-  \"Plutot\" else\n      if ((data %>% marcel_conv(row = \"5.29\")) %in% c(\"1\")) competences <-  \"Tout a fait\" else\n        competences <- NA\n\nprogres_v <- data %>% marcel_conv(row = \"5.30\", column = \"Verbatim\")\n\nfeedback <- data %>% marcel_conv(row = \"5.31\")\n\nfeedback_v <- data %>% marcel_conv(row = \"5.32\", column = \"Verbatim\")\n\nrefaire <- data %>% marcel_conv(row = \"6.1\")\n\nchange_v <- data %>% marcel_conv(row = \"6.2\", column = \"Verbatim\")\n\noptimale <- data %>% marcel_conv(row = \"6.3\")\n\noptimale_v <- data %>% marcel_conv(row = \"6.4\", column = \"Verbatim\")\n\nlibre_v <- data %>% marcel_conv(row = \"7.1\", column = \"Verbatim\")\n\n\ndf1 <- data.frame(nom,\n                 date,\n                 anonyme,\n                 societe,\n                 societe_v,\n                 gbu,\n                 gbu_v,\n                 site_v,\n                 fonction_v,\n                 langue_m,\n                 langue_m_v,\n                 m_projet,\n                 share_projet,\n                 activite_princ,\n                 activite_sous,\n                 activite_v,\n                 projet_intern,\n                 nation_domin,\n                 nation_domin_v,\n                 nation_cli,\n                 nation_cli_v,\n                 debut,\n                 fin,\n                 duree_v,\n                 entree,\n                 sortie,\n                 role_v,\n                 langue,\n                 langue_v,\n                 motif_v,\n                 intervenu,\n                 intervenu_v,\n                 demande,\n                 demande_v,\n                 test,\n                 ecrit,\n                 ecrit_v,\n                 oral,\n                 oral_v,\n                 ouvert,\n                 ouvert_v,\n                 ferme,\n                 ferme_v,\n                 niveau,\n                 niveau_v,\n                 organisme_v,\n                 choisi,\n                 individ,\n                 collec,\n                 enfr,\n                 etrang,\n                 telephone,\n                 elearning,\n                 presidentiel,\n                 duree_formation,\n                 heures_semaine,\n                 individ_v,\n                 collec_v,\n                 enfr_v,\n                 etrang_v,\n                 telephone_v,\n                 elearning_v,\n                 presidentiel_v,\n                 duree_formation_v,\n                 cours_v,\n                 ecoute,\n                 lecture,\n                 orale,\n                 expression_or,\n                 expression_ec,\n                 attentes,\n                 attentes_v,\n                 niveau_fin,\n                 niveau_fin_v,\n                 test_v,\n                 langue_impose,\n                 langue_impose_l,\n                 langue_impose_v,\n                 autre_langue_l,\n                 autre_langue_v,\n                 appris_lecture,\n                 appris_parole,\n                 appris_orale,\n                 appris_redaction,\n                 appris_negotiation,\n                 competences,\n                 progres_v,\n                 feedback,\n                 feedback_v,\n                 refaire,\n                 change_v,\n                 optimale,\n                 optimale_v,\n                 libre_v,\n                 adaption,\n                 adaption_v)\n\n                 \ndf <- rbind(df,df1)\ndata <- df\n\ndata$id <- c(1:nrow(data))\n\n#if(1 == 1 ) stop(paste0(\"ERROR: File \",q,\" Does probably not conform\\n with the programmed formatting.\\n Please Review. Marcel \\ DANKE MERKEL\"))\n\n\n\n}\n#write.csv2(data,\"TEST.csv\")\n#View(df)\n\n\n# To Dos Data Management: \n\n\n\n# A first overview over the Data\n\nstr(data)\n#View(data)\n\ndata %>% head()\n\n\n# Graphics: \nlibrary(ggplot2)\nlibrary(extrafont)\nlibrary(ggrepel)\nloadfonts(device=\"pdf\")       #Register fonts for pdf bitmap output\n\n# General png stuff\n\n# Arial pour Text\n# Helvetica ou Futura pour titres\n\n\n\n\n\n# Graph 1: \n\ng1 <- \n  data %>% \n  group_by(societe) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n))\ng1\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\na <- \n  g1 %>% \n  ggplot() + \n    geom_bar (aes(x = societe,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=societe,\n                y = perc + 0.025,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            fontface = \"bold\", \n            color = col_fill,\n            family = \"Arial\")+\n  ylab (\"%\")+\n  xlab (\"Companies\")+\n  scale_y_continuous(limits = c(0.0,0.5),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\"))+\n  # scale_x_discrete( labels = c( \"TCS\",\n  #                               \"Thales Air Systems\",\n  #                               \"TAS\"))+\n  theme(text = element_text(family = \"Arial\",\n                             colour = \"navyblue\",\n                             size = 18,\n                             face = \"plain\"\n   ),\n   axis.text.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 14),\n   axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n   axis.text.y = element_text(colour = \"navyblue\",\n                              face = \"plain\",\n                              family = \"Arial\",\n                              size = 12),\n   axis.title.y = element_text(colour = \"navyblue\",\n                               face = \"bold\",\n                               family = \"Arial\",\n                               size = 16,\n                               angle=180,\n                               vjust = -0.05),\n   \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Respondents per company\")\na\n\n\nggsave(filename=\"results/a.jpeg\",\n       plot=a,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n# Graph 2\n\n\ng2 <- \n  data %>% \n  group_by(gbu) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n))\ng2\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\nb <- \n  g2 %>% \n  ggplot() + \n  geom_bar (aes(x = gbu,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=gbu,\n                y = perc + 0.025,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            fontface = \"bold\", \n            color = col_fill,\n            family = \"Arial\")+\n  ylab (\"%\")+\n  xlab (\"GBU\")+\n  scale_y_continuous(limits = c(0.0,0.5),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\"))+\n  # scale_x_discrete( labels = c( \"TCS\",\n  #                               \"Thales Air Systems\",\n  #                               \"TAS\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=180,\n                              vjust = -0.05),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Respondents per Global Business Unit (GBU)\")\nb\n\n\nggsave(filename=\"results/b.jpeg\",\n       plot=b,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n## Graph 3\n\ng3 <- \n  data %>% \n  group_by(langue_m) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n))\ng3\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\nd <- \n  g3 %>% \n  ggplot() + \n  geom_bar (aes(x = langue_m,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=langue_m,\n                y = perc/2,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            fontface = \"bold\", \n            color = \"white\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  # scale_x_discrete( labels = c( \"TCS\",\n  #                               \"Thales Air Systems\",\n  #                               \"TAS\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Respondent’s mother tongue\")\nd\n\n\n\n\nggsave(filename=\"results/d.jpeg\",\n       plot=d,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n## Graph 4\n\ng4 <- \n  data %>% \n  group_by(m_projet) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n))\ng4\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\ne <- \n  g4 %>% \n  ggplot() + \n  geom_bar (aes(x = m_projet,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=m_projet,\n                y = perc/2,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            fontface = \"bold\", \n            color = \"white\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_y_continuous(limits = c(0.0,1.1),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  scale_x_discrete( breaks = c(1,0),\n                    labels = c( \"Project\",\n                                 \"No Project\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Percentage of respondents working in project\")\ne\n\n\n\n\nggsave(filename=\"results/e.jpeg\",\n       plot=e,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n## 1.7-1.10 Graph 5\n\n\ng5 <- \n  data %>% \n  group_by(share_projet) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n)) %>% as.data.frame()\n\ng5[,1] <- g5[,1] %>% as.character()\ng5 <- g5 %>% rbind(c(\"<50%\",0,0),c(\"<25%\",0,0))\ng5[,2] <- as.numeric (g5[,2])\ng5[,3] <- as.numeric (g5[,3])\ng5$lcolor <- c(\"white\",\"white\",\"blue\",\"blue\")\ng5$label <- g5$perc/2\ng5$label [3:4] <- c(0.05,0.05)\ng5\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\nf <- \n  g5 %>% \n  ggplot() + \n  geom_bar (aes(x = share_projet,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(data = g5[1:2,],\n            aes(x=share_projet,\n                y = label,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            color = \"white\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  geom_text(data = g5[3:4,],\n            aes(x=share_projet,\n                y = label,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            color = \"blue\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_y_continuous(limits = c(0.0,1),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Time spent in project\")\nf\n\n\n\n\nggsave(filename=\"results/f.jpeg\",\n       plot=f,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n\n\n## 2.3 Graph 6\n\n\ng6 <- \n  data %>% \n  group_by(nation_domin) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n)) %>% as.data.frame()\n\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\nh <- \n  g6 %>% \n  ggplot() + \n  geom_bar (aes(x = nation_domin,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=nation_domin,\n                y = perc/2,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            color = \"white\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Internal team main country of origin\")\nh\n\n\n\n\nggsave(filename=\"results/h.jpeg\",\n       plot=h,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n\n\n## 2.4 Graph 7\n\n\ng7 <- \n  data %>% \n  group_by(nation_cli) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n)) %>% as.data.frame()\n\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\ni <- \n  g7 %>% \n  ggplot() + \n  geom_bar (aes(x = nation_cli,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=nation_cli,\n                y = perc/2,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            color = \"white\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_y_continuous(limits = c(0.0,0.52),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Client country\")\ni\n\n\nggsave(filename=\"results/i.jpeg\",\n       plot=i,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n## 3.5 Graph\n\n\n\ng8 <- \n  data %>%   \n  group_by(test) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n)) %>% as.data.frame()\ng8\n\n\ng8$test <- g8$test %>% as.character()\n\ng8$test[g8$test %in% c(\"1\")] <- \"Test\"\ng8$test[g8$test %in% c(\"0\")] <- \"No Test\"\ng8$test[g8$test %in% c(\"\")] <- \"Don't know\"\n\ng8$test <- factor(g8$test,levels = rev(c(\"Test\",\"No Test\",\"Don't know\")))\n\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\no <- \n  g8 %>% \n  ggplot() + \n  geom_bar (aes(x = test,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=test,\n                y = perc/2,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            color = \"white\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Level testing at the training start \")\no\n\n\nggsave(filename=\"results/o.jpeg\",\n       plot=o,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\ndata$niveau_v\n## 3.6/3.7 3.8/3.9 Graph 9\n\ntable(data$ecrit)\ntable(data$oral)\ntable(data$ouvert)\ntable(data$ferme)\n\n\n\ng9 <- data.frame(\n  ec = table(data$ecrit == 1)[2]/(table(data$ecrit == 1)[1]+table(data$ecrit == 1))[\"TRUE\"] %>% as.numeric(),\n  or = table(data$oral == 1)[2]/(table(data$oral == 1)[1]+table(data$oral == 1))[\"TRUE\"] %>% as.numeric(),\n  ou = table(data$ouvert == 1)[2]/(table(data$ouvert == 1)[1]+table(data$ouvert == 1))[\"TRUE\"] %>% as.numeric(),\n  fe = table(data$ferme == 1)[2]/sum(table(data$ferme == 1)[1][\"TRUE\"],table(data$ferme == 1)[\"TRUE\"]) %>% as.numeric()\n)\ng9 [is.na (g9)] <- 0\n\ng9 <- data.frame(test = rownames(t(g9)),\n                 t(g9))\ncolnames(g9) [2] <- \"perc\"\n\ng9[,1] <- g9 [,1] %>% factor(levels = (c(\"fe\",\"ou\",\"or\",\"ec\")))\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\np <- \n  g9 %>% \n  ggplot() + \n  geom_bar (aes(x = test,\n                y = perc, \n                fill = test),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=test,\n                y = perc/2,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            color = \"white\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  geom_text(aes(x=1,\n                y = 0.05,\n                label = \"0 %\"),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            color = \"blue\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_fill_manual(values = c(\"fe\" = \"salmon\",\"ou\" = \"salmon\",\"or\" = \"dodgerblue\",\"ec\" = \"dodgerblue\"),\n                    breaks = c(\"fe\",\"ou\",\"or\",\"ec\"))+\n  scale_x_discrete(labels = rev(c(\"Written\",\"Oral\",\"Open\",\"Closed\")))+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line(),\n  legend.position=\"none\"\n  )+\n  ggtitle(\"Type of testing\")+\n  geom_vline(xintercept = 2.5,\n             col = \"black\",\n             linetype = \"dotted\",\n             size = 2)\np\n\n\nggsave(filename=\"results/p.jpeg\",\n       plot=p,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n\n\n## 3.10. 4.36\n\ndata$niveau[data$niveau %in% c(\"\")] <- NA\ndata$niveau <- data$niveau %>% as.character()\ntable(data$niveau)\ntable(data$niveau_fin)\n\n\ng10a <- data.frame(\n  beg = table(data$niveau == 1,useNA = \"always\")[\"TRUE\"]/sum(table(data$niveau == 1,useNA = \"always\")) %>% as.numeric(),\n  end = table(data$niveau_fin == 1,useNA = \"always\")[\"TRUE\"]/sum(table(data$niveau_fin == 1,useNA = \"always\")) %>% as.numeric())\n\ng10b <- data.frame(\n  beg = table(data$niveau == 1,useNA = \"always\")[\"FALSE\"]/sum(table(data$niveau == 1,useNA = \"always\")) %>% as.numeric(),\n  end = table(data$niveau_fin == 1,useNA = \"always\")[\"FALSE\"]/sum(table(data$niveau_fin == 1,useNA = \"always\")) %>% as.numeric())\n\ng10c <- data.frame(\n  beg = (table(data$niveau == 1,useNA = \"always\")[3]/sum(table(data$niveau == 1,useNA = \"always\"))) %>%as.character() %>% as.numeric(),\n  end = (table(data$niveau_fin == 1,useNA = \"always\")[3]/sum(table(data$niveau_fin == 1,useNA = \"always\"))) %>%as.character()%>% as.numeric())\n\ng10 <- rbind.data.frame(g10a,g10b,g10c)\ng10 <- data.frame(level = c(\"YES\",\"NO\",\"Don't know\"),g10)\n\nlibrary(tidyr)\ng10g <- g10 %>% gather(cat,perc,-level)\ng10g [g10g == 0] <- NA\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\nq <- \n  g10g %>% \n  ggplot() + \n  geom_bar (aes(x = cat,\n                y = perc,\n                group = level,\n                fill = level),\n            stat = \"identity\",\n            position = \"stack\",\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\ngeom_text(aes(x = cat,\n                y = perc,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            stat = \"identity\",\n            position = position_stack(vjust = 0.5),\n            size = 14/(14/5),\n            color = \"white\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_x_discrete(breaks = c(\"beg\",\"end\"),\n                   labels = c(\"Before Training\",\"After Training\"))+\n  scale_fill_manual(name = \"Legend\",\n                    values = c(\"YES\" = \"green\",\n                               \"NO\" = \"red\",\n                               \"Don't know\" = \"grey\"))+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Awareness of level following testing\")\nq\n\n\nggsave(filename=\"results/q.jpeg\",\n       plot=q,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n\n\n## 3.12 \n\n\ng11 <- \n  data %>% \n  group_by(choisi) %>% \n  summarise(n = n())  %>% \n  mutate(perc = n / sum (n)) %>% as.data.frame()\ng11\n\ncol_fill <- \"blue\"\ncol_edge <- col_fill\n\ndodge_width <- 0.7\n\nt <- \n  g11 %>% \n  ggplot() + \n  geom_bar (aes(x = choisi,\n                y = perc),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            fill = col_fill,\n            color = col_edge,\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=choisi,\n                y = perc/2,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            size = 14/(14/5),\n            color = \"white\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"%\")+\n  xlab (\"\")+\n  scale_x_discrete(breaks = c(1,0),\n                   labels = c(\"Yes\",\"No\"))+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Institute selection\")\nt\n\n\nggsave(filename=\"results/t.jpeg\",\n       plot=t,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n## 4.8 /4.9.1-4\nnames(data)\n\ng12 <- \n  data %>% \n  select(activite_princ,\n        duree_formation,\n         heures_semaine) \n\ng12$duree_formation <- unlist(lapply(g12[,c(\"duree_formation\")], function(x) as.numeric(as.character(x))))\ng12$heures_semaine <- factor(g12$heures_semaine,levels = c(\"30 min\",\n                                                           \"60 min\",\n                                                           \"> 60 min\",\n                                                           \"fulltime\"))\ng12 %>% str()\n\n\nv <- \n  g12 %>% \n  ggplot() + \n  geom_bar (aes(x = activite_princ,\n                y = duree_formation,\n                fill = heures_semaine),\n            stat = \"identity\",\n            position = position_dodge(width = dodge_width),\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x=activite_princ,\n                y = duree_formation + 3,\n                label = paste0(duree_formation,\"h\"),\n                color = heures_semaine),\n            position = position_dodge(width = dodge_width),\n            size = 8/(14/5),\n            fontface = \"bold\",\n            family = \"Arial\")+\n  ylab (\"Hours\")+\n  scale_color_manual (name = \"Sessions\",\n                      values = c(\"> 60 min\" = \"lightsalmon\",\n                                 \"60 min\" =  \"purple\",\n                                 \"30 min\" = \"darkgreen\",\n                                 \"fulltime\" = \"blue\"))+\n  scale_fill_manual (name = \"Sessions\",\n                     values = c(\"> 60 min\" = \"lightsalmon\",\n                                 \"60 min\" =  \"purple\",\n                                 \"30 min\" = \"darkgreen\",\n                                 \"fulltime\" = \"blue\"))+\n  xlab (\"\")+\n  scale_y_continuous(limits = c(0.0,max(g12$duree_formation,na.rm = TRUE)*1.1),\n                     expand = c(0, 0))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 10,\n                             angle = 45,\n                             vjust = 1.1,\n                             hjust = 1.1),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 10,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Total time and session duration\")\nv\n\n\nggsave(filename=\"results/v.jpeg\",\n       plot=v,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n\n## indiv/coll. | en france dehors\n\n#### WTFFF\n\ntable(data$individ)\ntable(data$collec)\ntable(data$enfr)\ntable(data$etrang)\ntable(data$presidentiel)\ntable(data$telephone)\ntable(data$elearning)\n\n\n\ndata$individ <- as.character(data$individ)\ndata$collec <- as.character(data$collec)\ndata$enfr <- as.character(data$enfr)\ndata$etrang <- as.character(data$etrang)\ndata$presidentiel <- as.character(data$presidentiel)\ndata$telephone <- as.character(data$telephone)\ndata$elearning <- as.character(data$elearning)\n\n\ndata$individ[data$individ %in% c(\"\")] <- 0\ndata$collec[data$collec %in% c(\"\")] <- 0\ndata$enfr[data$enfr %in% c(\"\")] <- 0\ndata$etrang[data$etrang %in% c(\"\")] <- 0\ndata$presidentiel[data$presidentiel %in% c(\"\")] <- 0\ndata$telephone[data$telephone %in% c(\"\")] <- 0\ndata$elearning[data$elearning %in% c(\"\")] <- 0\n\n\ndata$individ <- as.numeric(data$individ)\ndata$collec <- as.numeric(data$collec)\ndata$enfr <- as.numeric(data$enfr)\ndata$etrang <- as.numeric(data$etrang)\ndata$presidentiel <- as.numeric(data$presidentiel)\n\n\n\ng13 <- data.frame(\n  ind = table(data$individ == 1)[\"TRUE\"]/(table(data$individ == 1)[1]+table(data$individ == 1))[\"TRUE\"] %>% as.numeric(),\n  col = table(data$collec == 1)[\"TRUE\"]/(table(data$collec == 1)[1]+table(data$collec == 1))[\"TRUE\"] %>% as.numeric(),\n  tel = table(data$telephone == 1)[\"TRUE\"]/(table(data$telephone == 1)[1]+table(data$telephone == 1))[\"TRUE\"] %>% as.numeric(),\n  elea = table(data$elearning == 1)[\"TRUE\"]/(table(data$elearning == 1)[1]+table(data$elearning == 1))[\"TRUE\"] %>% as.numeric(),\n  pres = table(data$presidentiel == 1)[\"TRUE\"]/(table(data$presidentiel == 1)[1]+table(data$presidentiel == 1))[\"TRUE\"] %>% as.numeric()\n)\ng13 [is.na (g13)] <- 0\n\ng13 <- data.frame(test = rownames(t(g13)),\n                 t(g13))\ncolnames(g13) [2] <- \"perc\"\n\ng13[,1] <- g13 [,1] %>% factor(levels = rev(c(\"ind\",\"col\",\"tel\",\"elea\",\"pres\")))\n\nu <-\n  g13 %>%\n  ggplot() +\n  geom_bar (aes(x = test,\n                y = perc),\n            stat = \"identity\",\n            position = \"stack\",\n            col = rev(c(\"salmon\",\"salmon\",\"dodgerblue\",\"dodgerblue\",\"dodgerblue\")),\n            fill = rev(c(\"salmon\",\"salmon\",\"dodgerblue\",\"dodgerblue\",\"dodgerblue\")),\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x = test,\n                y = perc + 0.05,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            stat = \"identity\",\n            size = 14/(14/5),\n            color = \"blue\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"\")+\n  xlab (\"\")+\n  scale_x_discrete(breaks = c(\"ind\",\"col\",\"tel\",\"elea\",\"pres\"),\n                   labels = c(\"Individual\",\"Group\",\"Telephone\",\"E-Learning\",\"Classroom\"))+\n\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n\n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Training  delivery: learning conditions\")\nu\n\nggsave(filename=\"results/u.jpeg\",\n       plot=u,\n       pointsize = 24,\n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n## 4.11-4.30 appraisal of teaching competences\n\ndf <- with(data,{data.frame(activite_princ,\n                            ecoute,\n                            lecture,\n                            orale,\n                            expression_or,\n                            expression_ec,\n                            attentes)})\n\n\ndfg <- gather(df,competence,satisfaction,-activite_princ)\n\n\n\n###\n\n\ndfg2 <- \n  dfg %>% \n  select(-activite_princ) %>%\n  group_by(competence) %>% \n  mutate(n1 = n()) %>% \n  group_by(competence,satisfaction) %>% \n  mutate(n2 = n(),\n         perc = n2/n1) %>%\n  distinct(competence, satisfaction, .keep_all = TRUE)\n\n\ndfg2\n\ndfg3<- dfg2\nfor (q in (unique(names(df[,-1])))) {\n  for (i in unique(dfg$satisfaction)){\n    if (nrow(dfg2 %>% filter(competence == q,\n                             satisfaction == i)) > 0 ) {dfg3 <- dfg3} else {dfg3 <- rbind.data.frame(dfg3,c(q,i,0,0,0))}\n  }\n}\n\ndfg3$satisfaction <- as.character(dfg3$satisfaction)\ndfg3 [is.na(dfg3) ] <- \"NA\"\ndfg3$perc <- dfg3$perc %>% as.numeric()\ndfg3$satisfaction <- factor(dfg3$satisfaction, levels   = rev(c(\"Tout a fait\",\n                                                                \"Plutot\",\n                                                                \"Un peu\",\n                                                                \"Pas du tout\",\n                                                                \"NA\")))\ndodge_width <- 0.92\n\nz <- \n  dfg3 %>% ggplot() + \n  geom_bar(aes (x = competence,\n                y = perc,\n                fill = satisfaction),\n           stat = \"identity\",\n           position = position_dodge(width = dodge_width))+\n  geom_text(aes(x=competence,\n                y = perc + 0.025,\n                col = satisfaction,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            stat = \"identity\",\n            size = 8/(14/5),\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  scale_x_discrete(labels = rev(c(\"Oral interaction\",\n                            \"Reading\",\n                            \"Oral presentation\",\n                           \"Writing\",\n                           \"Listening\",\n                          \"Expectations\") ))+\n  ylab (\"\")+\n  scale_fill_manual (name = \"Appraisal\",\n                     breaks = c(\"Tout a fait\",\n                                \"Plutot\",\n                                \"Un peu\",\n                                \"Pas du tout\",\n                                \"NA\"),\n                     values = c(\"Tout a fait\" = \"darkgreen\",\n                                \"Plutot\" =  \"green\",\n                                \"Un peu\" = \"salmon\",\n                                \"Pas du tout\" = \"dodgerblue\",\n                                \"NA\" = \"grey\"),\n                     labels = c(\"Very much\",\n                                \"Rather\",\n                                \"Rather not\",\n                                \"Not at all\",\n                                \"Don't know\")\n  )+\n  scale_color_manual (name = \"Appraisal\",\n                      breaks = c(\"Tout a fait\",\n                                 \"Plutot\",\n                                 \"Un peu\",\n                                 \"Pas du tout\",\n                                 \"NA\"),\n                      values = c(\"Tout a fait\" = \"darkgreen\",\n                                 \"Plutot\" =  \"green\",\n                                 \"Un peu\" = \"salmon\",\n                                 \"Pas du tout\" = \"dodgerblue\",\n                                 \"NA\" = \"grey\"),\n                      labels = c(\"Very much\",\n                                 \"Rather\",\n                                 \"Rather not\",\n                                 \"Not at all\",\n                                 \"Don't know\"))+\n  \n  xlab (\"\")+\n  ylab (\"%\")+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 10,\n                             vjust = 0.65),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 10,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(0.8)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Appraisal of teaching by competence\")\nz\n\n\nggsave(filename=\"results/z.jpeg\",\n       plot=z,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n## Language: 52 53\n\nnames(data)\n\ndata$langue_impose_l\ndata$autre_langue_l [9] <- \"French\"\n\ng14a <- \n  data %>% \n  select(langue_impose_l,autre_langue_l) %>% \n  group_by(langue_impose_l) %>% \n  summarise(n_1 = n()) \n\ng14b <- \n  data %>% \n  select(langue_impose_l,autre_langue_l) %>% \n  group_by(autre_langue_l) %>% \n  summarise(n_2 = n()) \n\ng14a\ng14b\n\ng14g <- data.frame(language = c(\"English\",\n                                \"Spanish\",\n                                \"French\"),\n                   l_level = c(1,1,2),\n                   perc = c(8/9,\n                            1/9,\n                            9/9),\n                   an = c(0,90,0))\n\ng14g %>% str()\n\ndodge_width <- 0.7\n\nz3 <- \n  g14g %>% \n  ggplot() + \n  geom_bar (aes(x = l_level,\n                y = perc,\n                group = language,\n                fill = language),\n            stat = \"identity\",\n            position = \"stack\",\n            size = 0.8,\n            width=0.7)+\n  geom_text(aes(x = l_level,\n                y = perc/2,\n                label = language,\n                angle = an),\n            stat = \"identity\",\n            #          position = position_stack(vjust = 0.5),\n            size = 14/(14/5),\n            color = \"white\",\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"\")+\n  xlab (\"\")+\n  scale_x_continuous(breaks = c(1,2),\n                     labels = c(\"First language\",\"Second language\"))+\n  # scale_fill_manual(values = c(\"YES\" = \"green\",\n  #                              \"NO\" = \"red\",\n  #                              \"Don't know\" = \"grey\"))+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 14),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(1)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line(),\n  legend.position = \"none\"\n  )+\n  ggtitle(\"Working languages of project\")+\n  ylab (\"\")\nz3\n\n\nggsave(filename=\"results/z3.jpeg\",\n       plot=z3,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n## Satisfait 5.9 - 5.28\n\ndf <- with(data,{data.frame(activite_princ,\n           appris_lecture,\n           appris_parole,\n           appris_orale,\n           appris_redaction,\n           appris_negotiation,\n           competences)})\n\n\ndfg <- gather(df,competence,satisfaction,-activite_princ)\n\n\n\n###\n\n\ndfg2 <- \n  dfg %>% \n  select(-activite_princ) %>%\n  group_by(competence) %>% \n  mutate(n1 = n()) %>% \n  group_by(competence,satisfaction) %>% \n  mutate(n2 = n(),\n            perc = n2/n1) %>%\n  distinct(competence, satisfaction, .keep_all = TRUE)\n\n\ndfg2\n\ndfg3<- dfg2\nfor (q in (unique(names(df[,-1])))) {\n  for (i in unique(dfg$satisfaction)){\n    if (nrow(dfg2 %>% filter(competence == q,\n                        satisfaction == i)) > 0 ) {dfg3 <- dfg3} else {dfg3 <- rbind.data.frame(dfg3,c(q,i,0,0,0))}\n  }\n}\n\ndfg3$satisfaction <- as.character(dfg3$satisfaction)\ndfg3 [is.na(dfg3) ] <- \"NA\"\ndfg3$perc <- dfg3$perc %>% as.numeric()\ndfg3$satisfaction <- factor(dfg3$satisfaction, levels   = rev(c(\"Tout a fait\",\n                                                            \"Plutot\",\n                                                            \"Un peu\",\n                                                            \"Pas du tout\",\n                                                            \"NA\")))\ndodge_width <- 0.92\n\nz4 <- \n  dfg3 %>% ggplot() + \n  geom_bar(aes (x = competence,\n                y = perc,\n                fill = satisfaction),\n           stat = \"identity\",\n           position = position_dodge(width = dodge_width))+\n  geom_text(aes(x=competence,\n                y = perc + 0.025,\n                col = satisfaction,\n                label = paste0(format((round(perc,3)*100),digits = 2,decimal.mark = \",\"),\" %\")),\n            position = position_dodge(width = dodge_width),\n            stat = \"identity\",\n            size = 8/(14/5),\n            fontface = \"bold\",\n            family = \"Arial\")+\n  coord_flip()+\n  ylab (\"\")+\n  scale_x_discrete(labels = c(\"Reading\",\n                              \"Negotiation\",\n                              \"Oral presentation\",\n                              \"Meeting interaction\",\n                              \"Writing\",\n                              \"Communication skills\"))+\n  scale_fill_manual (name = \"Appraisal\",\n                     breaks = c(\"Tout a fait\",\n                               \"Plutot\",\n                               \"Un peu\",\n                               \"Pas du tout\",\n                               \"NA\"),\n                      values = c(\"Tout a fait\" = \"darkgreen\",\n                                 \"Plutot\" =  \"green\",\n                                 \"Un peu\" = \"salmon\",\n                                 \"Pas du tout\" = \"red\",\n                                 \"NA\" = \"grey\"),\n                      labels = c(\"Very much\",\n                                 \"Rather\",\n                                 \"Rather not\",\n                                 \"Not at all\",\n                                 \"Don't know\")\n                      )+\n    scale_color_manual (name = \"Appraisal\",\n                        breaks = c(\"Tout a fait\",\n                                   \"Plutot\",\n                                   \"Un peu\",\n                                   \"Pas du tout\",\n                                   \"NA\"),\n                        values = c(\"Tout a fait\" = \"darkgreen\",\n                                   \"Plutot\" =  \"green\",\n                                   \"Un peu\" = \"salmon\",\n                                   \"Pas du tout\" = \"red\",\n                                   \"NA\" = \"grey\"),\n                        labels = c(\"Very much\",\n                                   \"Rather\",\n                                   \"Rather not\",\n                                   \"Not at all\",\n                                   \"Don't know\"))+\n \n  xlab (\"\")+\n  ylab (\"%\")+\n  scale_y_continuous(limits = c(0.0,1.05),\n                     expand = c(0, 0),\n                     breaks = c(0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),\n                     labels = c(\"0\",\"10\",\"20\",\"30\",\"40\",\"50\",\"60\",\"70\",\"80\",\"90\",\"100\"))+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 10,\n                             angle = 45,\n                             vjust = 0.65),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 10,\n                              hjust=1),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              angle=0,\n                              vjust = 1,\n                              hjust = 0),\n  \n  legend.text = element_text(size = rel(0.8)),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )+\n  ggtitle(\"Ability to use the first working language by competence\")\nz4\n\n\nggsave(filename=\"results/z4.jpeg\",\n       plot=z4,\n       pointsize = 24, \n       width = 18 ,\n       height = 10,\n       scale = 0.5,\n       dpi = 800)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Write Function that converts Dates to unique format\nx <- \"03.11.1994\"\n\nthales_dates <- function (x) {\n  require(stringr)\n  require(lubridate)\n  a <- str_extract_all(string = x,pattern = \"[0-9]+\") %>% unlist() %>% paste(collapse = \"/\")\n  b <- as.Date(x = a,\n               format = \"%d/%m/%Y\")\n  return(b)\n}\n\nthales_dates(\"03.11.1994\")\n\n\ndate_data <- \n  with(data,{data.frame(nom,\n                        id,\n                        activite_princ,\n                      debut = debut %>% lapply(FUN = thales_dates) %>% do.call(\"c\",.),\n                      entree = entree %>% lapply(FUN = thales_dates) %>% do.call(\"c\",.) ,\n                      demande = demande %>% lapply(FUN = thales_dates) %>% do.call(\"c\",.) ,\n                      intervenu = intervenu %>% lapply(FUN = thales_dates) %>% do.call(\"c\",.) ,\n                      sortie = sortie %>% lapply(FUN = thales_dates) %>% do.call(\"c\",.) ,\n                      fin = fin %>% lapply(FUN = thales_dates) %>% do.call(\"c\",.) ,\n                      duree_formation)}) \n\n\n\n#View(date_data)\n\n\nlibrary(tidyr)\nlibrary(ggiraph)\n\n\n\ndate_long <- \n  gather(date_data,\n     key = evenement,\n     value = date,\n     c(-nom,\n       -id,\n       -duree_formation,\n       -activite_princ))\n\ndate_data$activite_princ <- date_data$activite_princ %>% str_replace_all(\"Satcom & Deployable Network\",\"Satcom\")\ndate_long$activite_princ <- date_long$activite_princ %>% str_replace_all(\"Satcom & Deployable Network\",\"Satcom\")\n#View(date_long)\n\n\n\nsize = 5\nalpha = 0.65\n\n\n\nw <- \n  ggplot (data = date_data) + \n    geom_hline(aes (yintercept = c(1:9)))+\n    geom_point_interactive(aes (x = debut,\n                  y = id,\n                  tooltip = paste(activite_princ,\"\\nDebut du Projet:\\n\",debut),\n                  col = \"debut\",\n                  fill = \"debut\",\n                  pch = \"debut\"),\n                 size = size,\n                 alpha = alpha,\n                 angle = 90)+\n  geom_point_interactive(aes (x = entree,\n                  y = id,\n                  tooltip = paste(activite_princ,\"\\nEntree du Projet:\\n\",entree),\n                  col = \"entree\",\n                  fill = \"entree\",\n                  pch = \"entree\"),\n             size = size,\n             alpha = alpha)+\n  geom_point_interactive(aes (x = demande,\n                  y = id,\n                  tooltip = paste(activite_princ,\"\\nDemande de Formation:\\n\",demande),\n                  col = \"demande\",\n                  fill = \"demande\",\n                  pch = \"demande\"),\n             size = size,\n             alpha = alpha)+\n  geom_point_interactive(aes (x = intervenu,\n                  y = id,\n                  tooltip = paste(activite_princ,\"\\nDebut de Formation:\\n\",intervenu,\"\\nDuree de Formation:\",duree_formation,\" heures\"),\n                  col = \"intervenu\",\n                  fill = \"intervenu\",\n                  pch = \"intervenu\"),\n             size = size,\n             alpha = alpha)+\n  geom_point_interactive(aes (x = sortie,\n                  y = id,\n                  tooltip = paste(activite_princ,\"\\nSortie du Projet:\\n\",sortie),\n                  col = \"sortie\",\n                  fill = \"sortie\",\n                  pch = \"sortie\"),\n             size = size,\n             alpha = alpha)+\n  geom_point_interactive(aes (x = fin,\n                  y = id,\n                  tooltip = paste(activite_princ,\"\\nFin du Projet:\\n\",fin),\n                  col = \"fin\",\n                  fill = \"fin\",\n                  pch = \"fin\"),\n             size = size,\n             alpha = alpha)+\n  # geom_text_repel(data = date_long,\n  #                     aes(x = date,\n  #                     y = id,\n  #                     label = paste0(evenement,format(date, format=\"%m/%y\")),\n  #                     col = evenement),\n  #                 size = 3,\n  #                 arrow = arrow(length = unit(0.01, 'npc')))+\n\n  scale_x_date(name = \"\",\n               limits = c(floor_date(as.Date(min(date_data[,c(\"debut\",\"entree\",\"demande\",\"intervenu\",\"sortie\",\"fin\")]%>%t()%>% as.vector(),na.rm = TRUE)),unit = c(\"year\")),\n                          ceiling_date(as.Date(max(date_data[,c(\"debut\",\"entree\",\"demande\",\"intervenu\",\"sortie\",\"fin\")]%>%t()%>% as.vector(),na.rm = TRUE)),unit = c(\"year\"))),\n               date_breaks = \"1 years\", \n               minor_breaks = c(floor_date(as.Date(min(date_data[,c(\"debut\",\"entree\",\"demande\",\"intervenu\",\"sortie\",\"fin\")]%>%t()%>% as.vector(),na.rm = TRUE)),unit = c(\"year\")),\n                                           seq(from=floor_date(as.Date(min(date_data[,c(\"debut\",\"entree\",\"demande\",\"intervenu\",\"sortie\",\"fin\")]%>%t()%>% as.vector(),na.rm = TRUE)),unit = c(\"year\")),\n                                               to=ceiling_date(as.Date(max(date_data[,c(\"debut\",\"entree\",\"demande\",\"intervenu\",\"sortie\",\"fin\")]%>%t()%>% as.vector(),na.rm = TRUE)),unit = c(\"year\")), by=\"6 months\"),\n                                           ceiling_date(as.Date(max(date_data[,c(\"debut\",\"entree\",\"demande\",\"intervenu\",\"sortie\",\"fin\")]%>%t()%>% as.vector(),na.rm = TRUE)),unit = c(\"year\"))) ,\n               date_labels = \"%Y\")+\n  scale_y_continuous(name = \"\",\n                     limits =c(1,9),\n                      breaks = date_data$id,\n                     labels = date_data$activite_princ)+\n  scale_color_manual(name = \"Legend\",\n                     breaks = c(\"debut\",\n                                \"entree\",\n                                \"demande\",\n                                \"intervenu\",\n                                \"sortie\",\n                                \"fin\"),\n                     values = c(\"debut\" = \"lightsalmon3\",\n                                \"entree\" = \"dodgerblue\",\n                                \"demande\" = \"darkgreen\",\n                                \"intervenu\" = \"darkgreen\",\n                                \"sortie\" = \"dodgerblue\",\n                                \"fin\" = \"lightsalmon3\")\n                     ,\n                     labels = c(\"Beginning\",\n                                \"Arrival\",\n                                \"Request\",\n                                \"Delivery\",\n                                \"Departure\",\n                                \"End\")\n                     )+\n  scale_fill_manual(name = \"Legend\",\n                     values = c(\"debut\" = \"lightsalmon3\",\n                                \"entree\" = \"dodgerblue\",\n                                \"demande\" = \"darkgreen\",\n                                \"intervenu\" = \"darkgreen\",\n                                \"sortie\" = \"dodgerblue\",\n                                \"fin\" = \"lightsalmon3\"),\n                    breaks = c(\"debut\",\n                               \"entree\",\n                               \"demande\",\n                               \"intervenu\",\n                               \"sortie\",\n                               \"fin\"),\n                     labels = c(\"Beginning\",\n                                \"Arrival\",\n                                \"Request\",\n                                \"Delivery\",\n                                \"Departure\",\n                                \"End\")\n                    )+\n  scale_shape_manual(name = \"Legend\",\n                     values = c(\"debut\" = 0,\n                                \"entree\" = 25,\n                                \"demande\" = 1,\n                                \"intervenu\" = 21,\n                                \"sortie\" = 24,\n                                \"fin\" = 15),\n                     breaks = c(\"debut\",\n                                \"entree\",\n                                \"demande\",\n                                \"intervenu\",\n                                \"sortie\",\n                                \"fin\"),\n                     labels = c(\"Beginning\",\n                                \"Arrival\",\n                                \"Request\",\n                                \"Delivery\",\n                                \"Departure\",\n                                \"End\"))+\n  ggtitle(\"Training integration in project life span\")+\n  theme_bw()+\n  theme(text = element_text(family = \"Arial\",\n                            colour = \"navyblue\",\n                            size = 18,\n                            face = \"plain\"\n  ),\n  axis.text.x = element_text(colour = \"navyblue\",\n                             face = \"bold\",\n                             family = \"Arial\",\n                             size = 10),\n  axis.title.x = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 16,\n                              hjust=1,\n                              vjust = 0.5),\n  axis.text.y = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12),\n  axis.title.y = element_text(colour = \"navyblue\",\n                              face = \"bold\",\n                              family = \"Arial\",\n                              size = 14,\n                              angle=0,\n                              vjust = 1.9,\n                              hjust = 1.5),\n  \n  legend.text = element_text(colour = \"navyblue\",\n                             face = \"plain\",\n                             family = \"Arial\",\n                             size = 12,\n                             angle=0),\n  legend.key.size = unit(1, \"lines\"),\n  legend.key.width = unit(0.5, \"lines\"),\n  legend.key.height = unit(0.8, \"lines\"),\n  legend.key = element_rect(colour = \"white\"),\n  legend.background =   element_rect(colour = \"black\"),\n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(),\n  panel.background = element_blank(),\n  axis.line = element_line()\n  )\n\nw\n\nw1 <- ggiraph(code = print({w}),\n        width = 1,\n        zoom_max = 10,\n        pointsize = 30,\n        width_svg = 8, \n        height_svg = 4)\n\nw1\n\n# ggsave(filename=\"results/w.jpeg\",\n#        plot=w1,\n#        pointsize = 24, \n#        width = 18 ,\n#        height = 10,\n#        scale = 0.5,\n#        dpi = 800)\n\n\nsaveWidget(w1,\"w.html\",selfcontained = F)\n# and in png\nwebshot(\"w1.html\",\"results/w.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n\n\nlibrary(qdapRegex)\n\n#install webshot\nlibrary(webshot)\n# webshot::install_phantomjs()\n# Make the graph\n\n# save it in html\nlibrary(\"htmlwidgets\")\n\n\n`%nin%` <- function(x, o) return(!(x %in% o)) # returns opposite of %in%\n\n# require(devtools)\n# install_github(\"lchiffon/wordcloud2\")\n\nlibrary(wordcloud2)\nlibrary(tm)\n\n\n# Function who makes corrections\n\nx %>% marcel_replace()\n\nmarcel_replace <- function(x,cols = c(1)) {y = unlist(lapply(x[,cols], function(a) {return(a %>% \n  str_replace_all(\"Germany\",\"germany\") %>%\n  str_to_lower()  %>% \n  str_replace_all(\"germany\",\"germany\") %>%\n  str_replace_all(\"German\",\"german\") %>%\n  str_replace_all(\"german\",\"german\") %>%\n  str_replace_all(\"France\",\"france\") %>%\n  str_replace_all(\"france\",\"france\") %>%\n  str_replace_all(\"French\",\"french\") %>%\n  str_replace_all(\"french\",\"french\") %>% \n  str_replace_all(\"English\",\"english\") %>%\n  str_replace_all(\"english\",\"english\") %>%\n  str_replace_all(\"England\",\"england\") %>%\n  str_replace_all(\"england\",\"england\") %>%\n  str_replace_all(\"Spain\",\"spain\") %>%\n  str_replace_all(\"spain\",\"spain\") %>%\n  str_replace_all(\"Spanish\",\"spanish\") %>%\n  str_replace_all(\"spanish\",\"spanish\") %>%  \n  str_replace_all(\"bid\",\"bid\") %>%\n  str_replace_all(\"Bid\",\"bid\") %>%\n  str_replace_all(\"Manager\",\"manager\") %>%\n  str_replace_all(\"manager\",\"manager\") %>%\n  str_replace_all(\"customer\",\"customer\") %>%\n  str_replace_all(\"Customer\",\"customer\") %>%  \n  str_replace_all(\"Project\",\"project\") %>%\n  str_replace_all(\"Client\",\"client\") %>%\n  str_replace_all(\"client\",\"client\"))}) )\nreturn(y %>% as.data.frame())\n  }\n\n\n## 1.4. Fonction du Repondant\n\nx <- \n  ex_between_multiple(data$fonction_v %>% \n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>% \n  unlist() %>% \n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \n\n\nc <- wordcloud2(x,\n           size = 1,    \n           minSize = 0.1, \n           gridSize =  5,\n           fontFamily = 'Segoe UI', \n           fontWeight = 'bold',\n           color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\"),nrow(x), replace = TRUE),\n           backgroundColor = \"white\",\n           minRotation = -pi/4,\n           maxRotation = pi/4,\n           shuffle = FALSE,\n           rotateRatio = 0.7,\n           shape = 'circle',\n           ellipticity = 0.65,\n           widgetsize = NULL,\n           figPath = NULL,\n           hoverFunction = NULL)\nc\n\n\nsaveWidget(c,\"c.html\",selfcontained = F)\n# and in png\nwebshot(\"c.html\",\"results/c.jpeg\", vwidth = 1980, vheight = 1200,delay =5)\n\n##### 2.1. projet/sous projet\n\nx <- data$activite_princ %>% \n  # ex_between_multiple(data$activite_princ %>% \n  #                       as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n  #                     clean = TRUE, replacement = \"\", extract = TRUE,\n  #                     include.markers = FALSE, merge = TRUE)%>% \n  # unlist() %>% \n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n#  filter(str_sub(.,1,1) %nin% c(\" \",\".\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\ng <- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\ng\n\n\nsaveWidget(g,\"g.html\",selfcontained = F)\n# and in png\nwebshot(\"g.html\",\"results/g.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n# 3.1. language studied\n\nx <- data$langue %>% \n  # ex_between_multiple(data$activite_princ %>% \n  #                       as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n  #                     clean = TRUE, replacement = \"\", extract = TRUE,\n  #                     include.markers = FALSE, merge = TRUE)%>% \n  # unlist() %>% \n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\nx$. <- x$. %>% as.character()\n\nx$.[x$. %in% c(\"arabe\")] <- \"arabic\"\n\nl <- wordcloud2(x,\n                size = 1.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\nl\n\n\nsaveWidget(l,\"l.html\",selfcontained = F)\n# and in png\nwebshot(\"l.html\",\"results/l.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n\n# 3.2. motif de la demande\n\nx <-  \n  ex_between_multiple(data$motif_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\nm <- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\nm\n\n\nsaveWidget(m,\"m.html\",selfcontained = F)\n# and in png\nwebshot(\"m.html\",\"results/m.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n\n# 3.4. Demande Verbatim\n\nx <-  \n  ex_between_multiple(data$demande_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\n#Fake News\nx$Freq [x$Freq ==7] <- 3\n\nn <- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\nn\n\n\nsaveWidget(n,\"n.html\",selfcontained = F)\n# and in png\nwebshot(\"n.html\",\"results/n.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n\n\n# 3.10 Qualité test\n\nx <-  \n  ex_between_multiple(data$niveau_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\nr <- wordcloud2(x[!x$. == \"test e-learning platform\",],\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\nr\n\n\nsaveWidget(r,\"r.html\",selfcontained = F)\n# and in png\nwebshot(\"r.html\",\"results/r.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n# 3.11 Insitute\n\nx <-  \n  ex_between_multiple(data$organisme_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\n#Fake News\nx$Freq[x$Freq  == 5] <- 3\n\ns <- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\ns\n\n\nsaveWidget(s,\"s.html\",selfcontained = F)\n# and in png\nwebshot(\"s.html\",\"results/s.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n# 4.9\n\nx <-  \n  ex_between_multiple(data$cours_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\nx <- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\nx\n\n\nsaveWidget(x,\"x.html\",selfcontained = F)\n# and in png\nwebshot(\"x.html\",\"results/x.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n\n# 4.10\n\nx <-  \n  ex_between_multiple(data$adaption_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\nx <- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\nx\n\n\nsaveWidget(y,\"y_55.html\",selfcontained = F)\n# and in png\nwebshot(\"y_55.html\",\"results/y_55.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n# 4.35\n\nx <-  \n  ex_between_multiple(data$attentes_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\nz1 <- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\nz1\n\n\nsaveWidget(z1,\"z1.html\",selfcontained = F)\n# and in png\nwebshot(\"z1.html\",\"results/z1.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n# 4.38\nx <-  \n  ex_between_multiple(data$niveau_fin_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \n\ny <-  \n  ex_between_multiple(data$test_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \ny\n\nx1 <- rbind(x,y)\n\nz2 <- wordcloud2(x1,\n                 size = 0.5,    \n                 minSize = 0.1, \n                 gridSize =  5,\n                 fontFamily = 'Segoe UI', \n                 fontWeight = 'bold',\n                 color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x1), replace = TRUE),\n                 backgroundColor = \"white\",\n                 minRotation = -pi/4,\n                 maxRotation = pi/4,\n                 shuffle = FALSE,\n                 rotateRatio = 0.7,\n                 shape = 'circle',\n                 ellipticity = 0.65,\n                 widgetsize = NULL,\n                 figPath = NULL,\n                 hoverFunction = NULL)\nz2\n\n\nsaveWidget(z2,\"z2.html\",selfcontained = F)\n# and in png\nwebshot(\"z2.html\",\"results/z2.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n# 5.30\n\nx <-  \n  ex_between_multiple(data$progres_v %>%\n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>%\n  unlist() %>%\n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\",\",\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0) \nx\n\nz5 <- wordcloud2(x,\n                 size = 0.5,    \n                 minSize = 0.1, \n                 gridSize =  5,\n                 fontFamily = 'Segoe UI', \n                 fontWeight = 'bold',\n                 color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x), replace = TRUE),\n                 backgroundColor = \"white\",\n                 minRotation = -pi/4,\n                 maxRotation = pi/4,\n                 shuffle = FALSE,\n                 rotateRatio = 0.7,\n                 shape = 'circle',\n                 ellipticity = 0.65,\n                 widgetsize = NULL,\n                 figPath = NULL,\n                 hoverFunction = NULL)\nz5\n\n\nsaveWidget(z5,\"z5.html\",selfcontained = F)\n# and in png\nwebshot(\"z5.html\",\"results/z5.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n\n\n##### 5.31 / 5.32 Nuage de Mot\n\n\n# Baukasten\nx <- \n  ex_between_multiple(data$feedback_v %>% \n                      as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                    clean = TRUE, replacement = \"\", extract = TRUE,\n                    include.markers = FALSE, merge = TRUE)%>% \n  unlist() %>% \n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0)\n\nx\n\ntable(data$feedback)\n\n\nz6<- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\n\nz6 \n            \nsaveWidget(z6,\"z6_55.html\",selfcontained = F)\n# and in png\nwebshot(\"z6_55.html\",\"results/z6_55.jpeg\", delay =5, vwidth = 1200, vheight = 800)\n\n\n##### 6.1/6.2\n\n\n# Baukasten\nx <- \n  ex_between_multiple(data$change_v %>% \n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>% \n  unlist() %>% \n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0)\n\nx\n\ntable(data$refaire)\n\n\nz7<- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  5,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\n\nz7\n\nsaveWidget(z7,\"z7_66.html\",selfcontained = F)\n# and in png\nwebshot(\"z7_66.html\",\"results/z7.jpeg\",   vwidth = 1200, vheight = 800,delay =5)\n\n\n##### 6.3/6.4\n\n\n# Baukasten\nx <- \n  ex_between_multiple(data$optimale_v %>% \n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>% \n  unlist() %>% \n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0)\nx\n\ntable(data$optimale)\n\n\nz8<- wordcloud2(x,\n                size = 0.2,    \n                minSize = 0.1, \n                gridSize =  20,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\n\nz8\n\nsaveWidget(z8,\"z8_44.html\",selfcontained = F)\n# and in png\nwebshot(\"z8_44.html\",\"results/z8_44.jpeg\", vwidth = 1200, vheight = 800,delay =5)\n\n##### 7.1\n\n\n# Baukasten\nx <- \n  ex_between_multiple(data$libre_v %>% \n                        as.character(), \"*\", \"*\", fixed = TRUE, trim = TRUE,\n                      clean = TRUE, replacement = \"\", extract = TRUE,\n                      include.markers = FALSE, merge = TRUE)%>% \n  unlist() %>% \n  as.vector() %>%\n  as.character() %>%\n  as.data.frame() %>% \n  marcel_replace() %>% \n  \n  filter(str_sub(.,1,1) %nin% c(\" \",\".\")) %>% \n  table() %>% \n  as.data.frame() %>% \n  filter(Freq != 0)\n\nx\n\n\nz9<- wordcloud2(x,\n                size = 0.5,    \n                minSize = 0.1, \n                gridSize =  20,\n                fontFamily = 'Segoe UI', \n                fontWeight = 'bold',\n                color = sample(c(\"blue\",\"salmon\",\"green\",\"purple\",\"dodgerblue\",\"orange\"),nrow(x), replace = TRUE),\n                backgroundColor = \"white\",\n                minRotation = -pi/4,\n                maxRotation = pi/4,\n                shuffle = FALSE,\n                rotateRatio = 0.7,\n                shape = 'circle',\n                ellipticity = 0.65,\n                widgetsize = NULL,\n                figPath = NULL,\n                hoverFunction = NULL)\n\nz9\n\nsaveWidget(z9,\"z9.html\",selfcontained = F)\n# and in png\nwebshot(\"z9.html\",\"results/z9.jpeg\", delay =5,  vwidth = 1200, vheight = 800)\n",
    "created" : 1505694709386.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3132080040",
    "id" : "F56434EE",
    "lastKnownWriteTime" : 1505694700,
    "last_content_update" : 1505694700,
    "path" : "C:/Users/Schliebs/Desktop/01_data_management.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}